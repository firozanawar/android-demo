apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.example.sshah.gilt_android"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file("../../gilt_keystore.jks")
            storePassword "Optimizely"
            keyAlias "android-demo"
            keyPassword "Optimizely"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.+'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'com.android.support:appcompat-v7:23.+'
    compile 'com.loopj.android:android-async-http:1.4.7'
    compile 'com.facebook.android:facebook-android-sdk:4.6.0'

//     If you want to include all Optimizely modules and integrations for all variants use the bundle
    compile('com.optimizely:optimizely:1.3.7@aar') {
        transitive true
    }
    // OPTIMIZELY SELECTIVE MODULE BUILD

    // To build both release and debug variants run gilt:assemble
    // To build and install the release variant run gilt:installRelease
    // It won't automatically launch.
    // When you build the app with the green arrow the debug version is put on your phone ;)
    // Must be transitive, modules can have their own compile dependencies
//    compile ('com.optimizely:optimizely-core-rc:1.4.0-rc2@aar') { // Adds core to all variants (release, debug)
//        transitive true
//    }
//    compile ('com.optimizely:optimizely-view-rc:1.4.0-rc2@aar') { // Adds core to all variants (release, debug)
//        transitive true
//    }
//    debugCompile ('com.optimizely:optimizely-editor-rc:1.4.0-rc2@aar') { // Only add editor to debug variant
//        transitive true
//    }
//    compile ('com.optimizely:localyticsintegration:1.2.4@aar')
    // From source (Don't include if already building against binaries
//    compile project(':core') // Adds core to all variants (release, debug)
//    compile project(':view') // Adds view to all variants (release, debug)
//    debugCompile project(':editor') // Adds editor only to debug variant (debug)

//    compile project(':integrations:localytics')
}
